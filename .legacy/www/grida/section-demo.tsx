import React, { useState } from "react";
import styled from "@emotion/styled";
import { CliDemoTypeContent } from "./section-demo-type-content";
import { useTranslation } from "next-i18next";
/**
 * `<SectionDemo>` ('section-demo')
 * - [Open in Figma](https://figma.com/file/Gaznaw1QHppxvs9UkqNOb0?node-id=8266:64061)
 * - [Open in Grida](https://code.grida.co/files/Gaznaw1QHppxvs9UkqNOb0?node=8266:64061)
 *
 *
 * ---
 * @example
 * ```tsx
 * import React from "react";
 *
 * export default function () {
 *   return (
 *     <>
 *       üëá instanciate widget like below. üëá
 *       <SectionDemo/>
 *     </>
 *   )
 * }
 * ```
 * ---
 * @params {any} props - this widget does not requires props. you can pass custom dynamic props to the widget as you want (on typescript, it will raise type check issues).
 * ---
 * @preview
 * ![](https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/0b0910fd-273f-4e6c-9dd2-31a7f2a7bf07)
 * ---
 * @remarks
 * @see {@link https://grida.co/docs} for more information.
 * ---
 * Code generated by grida.co | engine 0.0.1 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*
 *
 *
 * ![Made with Grida](https://bridged-service-static.s3.us-west-1.amazonaws.com/branding/logo/32.png)
 * <!-- Info: Please do not remove this comment unless intended. removing this section will break grida integrations. -->
 * <!-- grida.meta.widget_declaration | engine : 0.0.1 | source : figma://Gaznaw1QHppxvs9UkqNOb0/8266:64061 -->
 */
export function SectionDemo() {
  const [demoplaykey, setdemoplaykey] = useState("initial");
  const { t } = useTranslation();

  const onreplayclick = () => {
    setdemoplaykey("replay" + Math.random());
  };

  return (
    <RootWrapperSectionDemo>
      <ReplayButton onClick={onreplayclick}>
        <Replay>{t("replay")}</Replay>
        <svg
          width="14"
          height="18"
          viewBox="0 0 14 18"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.99967 4.16658V0.833252L2.83301 4.99992L6.99967 9.16658V5.83325C9.758 5.83325 11.9997 8.07492 11.9997 10.8333C11.9997 13.5916 9.758 15.8332 6.99967 15.8332C4.24134 15.8332 1.99967 13.5916 1.99967 10.8333H0.333008C0.333008 14.5166 3.31634 17.4999 6.99967 17.4999C10.683 17.4999 13.6663 14.5166 13.6663 10.8333C13.6663 7.14992 10.683 4.16658 6.99967 4.16658Z"
            fill="black"
            fillOpacity="0.9"
          />
        </svg>
      </ReplayButton>
      <Demo>
        <Frame286>
          <ProjectsMyReactAppZsh>
            ~/projects/my-react-app -- zsh
          </ProjectsMyReactAppZsh>
        </Frame286>
        <Ignore>
          <CliDemoTypeContent key={demoplaykey} language="bash">
            {src}
          </CliDemoTypeContent>
        </Ignore>
      </Demo>
    </RootWrapperSectionDemo>
  );
}

const src = `‚ûú ~/ grida add https://www.figma.com/file/x7RRK6RwWtZuNakmbMLTVH/?node-id=906%3A779
‚ûú ~/ Fetching desing...
‚ûú ~/ Generating code
‚ûú ~/ Fetching assets..
‚ûú ~/ Module added to ./src/grida/home.tsx
‚ûú ~/ To use this module, import..

     \`\`\`
     import React from ‚Äúreact‚Äù;
     import { Home } from ‚Äú./grida/home‚Äù;
     \`\`\`

‚ûú ~/
`;

const RootWrapperSectionDemo = styled.div`
  min-height: 100vh;
  background-color: white;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  position: relative;
`;

const ReplayButton = styled.button`
  cursor: pointer;
  outline: none;
  border: none;
  background: none;
  display: flex;
  justify-content: center;
  flex-direction: row;
  align-items: center;
  gap: 8px;
  border-radius: 4px;
  box-sizing: border-box;
  padding: 10px 16px;
  position: absolute;
  left: calc((calc((50% + -4px)) - 62px));
  top: 840px;
  opacity: 0.8;
  height: 44px;

  opacity: 0.8;

  :hover {
    opacity: 1;
  }
  transition: all 0.2s ease-in-out;
`;

const Replay = styled.span`
  color: rgba(0, 0, 0, 0.8);
  text-overflow: ellipsis;
  font-size: 18px;
  font-family: "Roboto Mono", monospace !important;
  font-weight: 400;
  text-align: left;
`;

const IconsMdiReplay = styled.img`
  width: 20px;
  height: 20px;
  object-fit: cover;
`;

const Demo = styled.div`
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
  align-items: flex-start;
  gap: 32px;
  box-shadow: 0px 4px 32px rgba(0, 0, 0, 0.04);
  border: solid 1px rgba(0, 0, 0, 0.04);
  border-radius: 8px;
  background-color: white;
  box-sizing: border-box;
  position: absolute;
  top: 147px;
  height: 593px;
  @media (max-width: 768px) {
    left: 24px;
    right: 24px;
  }
  left: 200px;
  right: 200px;
`;

const Frame286 = styled.div`
  display: flex;
  justify-content: center;
  flex-direction: row;
  align-items: center;
  gap: 10px;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  align-self: stretch;
  background-color: rgba(0, 0, 0, 0.05);
  box-sizing: border-box;
  padding: 4px 87px;
  flex-shrink: 0;
`;

const ProjectsMyReactAppZsh = styled.span`
  color: rgba(0, 0, 0, 0.3);
  text-overflow: ellipsis;
  font-size: 16px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 157%;
  text-align: center;
`;

const Ignore = styled.div`
  overflow: scroll;

  /* no scrollbar */
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
  ::-webkit-scrollbar {
    display: none;
  }

  display: flex;
  justify-content: flex-start;
  flex-direction: column;
  align-items: flex-start;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  align-self: stretch;
  box-sizing: border-box;
  padding: 0px 40px;
  flex-shrink: 0;
`;
