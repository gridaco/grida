export const AXES: Record<string, string> = {
  // Standard axes
  wght: "Weight",
  wdth: "Width",
  slnt: "Slant",
  ital: "Italic",
  opsz: "Optical Size",
  // Known custom axes
  GRAD: "Grade",
  CASL: "Casual",
  CRSV: "Cursive",
  MONO: "Monospace",
  ROND: "Roundness",
  SOFT: "Softness",
  WONK: "Wonky",
  BLED: "Bleed",
  BNCE: "Bounce",
  EHLT: "Edge Highlight",
  ELGR: "Element Grid",
  ELSH: "Element Shape",
  EDPT: "Extrusion Depth",
  FILL: "Fill",
  FLAR: "Flare",
  HEXP: "Hyper Expansion",
  MORF: "Morph",
  YTAS: "Parametric Ascender Height",
  XTRA: "Parametric Counter Width",
  YTDE: "Parametric Descender Depth",
  YTFI: "Parametric Figure Height",
  YTLC: "Parametric Lowercase Height",
  YTUC: "Parametric Uppercase Height",
  YELA: "Vertical Element Alignment",
  VOLM: "Volume",
  YEAR: "Year",
  ARRO: "AR Retinal Resolution",
  INFM: "Informality",
  SCAN: "Scanlines",
  SHRP: "Sharpness",
} as const;

export type OpentypeAxisTag = keyof typeof AXES;

const __cv00_name = (index: number) => `Character Variant ${index}`;
const __ss00_name = (index: number) => `Stylistic Set ${index}`;

// OpenType features mapping from docs/reference/open-type-features.md
export const FEATURES: Record<string, string> = {
  aalt: "Access All Alternates",
  abvf: "Above-base Forms",
  abvm: "Above-base Mark Positioning",
  abvs: "Above-base Substitutions",
  afrc: "Alternative Fractions",
  akhn: "Akhand",
  apkn: "Kerning for Alternate Proportional Widths",
  blwf: "Below-base Forms",
  blwm: "Below-base Mark Positioning",
  blws: "Below-base Substitutions",
  c2pc: "Petite Capitals From Capitals",
  c2sc: "Small Capitals From Capitals",
  calt: "Contextual Alternates",
  case: "Case-sensitive Forms",
  ccmp: "Glyph Composition / Decomposition",
  cfar: "Conjunct Form After Ro",
  chws: "Contextual Half-width Spacing",
  cjct: "Conjunct Forms",
  clig: "Contextual Ligatures",
  cpct: "Centered CJK Punctuation",
  cpsp: "Capital Spacing",
  cswh: "Contextual Swash",
  curs: "Cursive Positioning",
  cv01: __cv00_name(1),
  cv02: __cv00_name(2),
  cv03: __cv00_name(3),
  cv04: __cv00_name(4),
  cv05: __cv00_name(5),
  cv06: __cv00_name(6),
  cv07: __cv00_name(7),
  cv08: __cv00_name(8),
  cv09: __cv00_name(9),
  cv10: __cv00_name(10),
  cv11: __cv00_name(11),
  cv12: __cv00_name(12),
  cv13: __cv00_name(13),
  cv14: __cv00_name(14),
  cv15: __cv00_name(15),
  cv16: __cv00_name(16),
  cv17: __cv00_name(17),
  cv18: __cv00_name(18),
  cv19: __cv00_name(19),
  cv20: __cv00_name(20),
  cv21: __cv00_name(21),
  cv22: __cv00_name(22),
  cv23: __cv00_name(23),
  cv24: __cv00_name(24),
  cv25: __cv00_name(25),
  cv26: __cv00_name(26),
  cv27: __cv00_name(27),
  cv28: __cv00_name(28),
  cv29: __cv00_name(29),
  cv30: __cv00_name(30),
  cv31: __cv00_name(31),
  cv32: __cv00_name(32),
  cv33: __cv00_name(33),
  cv34: __cv00_name(34),
  cv35: __cv00_name(35),
  cv36: __cv00_name(36),
  cv37: __cv00_name(37),
  cv38: __cv00_name(38),
  cv39: __cv00_name(39),
  cv40: __cv00_name(40),
  cv41: __cv00_name(41),
  cv42: __cv00_name(42),
  cv43: __cv00_name(43),
  cv44: __cv00_name(44),
  cv45: __cv00_name(45),
  cv46: __cv00_name(46),
  cv47: __cv00_name(47),
  cv48: __cv00_name(48),
  cv49: __cv00_name(49),
  cv50: __cv00_name(50),
  cv51: __cv00_name(51),
  cv52: __cv00_name(52),
  cv53: __cv00_name(53),
  cv54: __cv00_name(54),
  cv55: __cv00_name(55),
  cv56: __cv00_name(56),
  cv57: __cv00_name(57),
  cv58: __cv00_name(58),
  cv59: __cv00_name(59),
  cv60: __cv00_name(60),
  cv61: __cv00_name(61),
  cv62: __cv00_name(62),
  cv63: __cv00_name(63),
  cv64: __cv00_name(64),
  cv65: __cv00_name(65),
  cv66: __cv00_name(66),
  cv67: __cv00_name(67),
  cv68: __cv00_name(68),
  cv69: __cv00_name(69),
  cv70: __cv00_name(70),
  cv71: __cv00_name(71),
  cv72: __cv00_name(72),
  cv73: __cv00_name(73),
  cv74: __cv00_name(74),
  cv75: __cv00_name(75),
  cv76: __cv00_name(76),
  cv77: __cv00_name(77),
  cv78: __cv00_name(78),
  cv79: __cv00_name(79),
  cv80: __cv00_name(80),
  cv81: __cv00_name(81),
  cv82: __cv00_name(82),
  cv83: __cv00_name(83),
  cv84: __cv00_name(84),
  cv85: __cv00_name(85),
  cv86: __cv00_name(86),
  cv87: __cv00_name(87),
  cv88: __cv00_name(88),
  cv89: __cv00_name(89),
  cv90: __cv00_name(90),
  cv91: __cv00_name(91),
  cv92: __cv00_name(92),
  cv93: __cv00_name(93),
  cv94: __cv00_name(94),
  cv95: __cv00_name(95),
  cv96: __cv00_name(96),
  cv97: __cv00_name(97),
  cv98: __cv00_name(98),
  cv99: __cv00_name(99),
  dist: "Distances",
  dlig: "Discretionary Ligatures",
  dnom: "Denominators",
  dtls: "Dotless Forms",
  expt: "Expert Forms",
  falt: "Final Glyph on Line Alternates",
  fin2: "Terminal Forms #2",
  fin3: "Terminal Forms #3",
  fina: "Terminal Forms",
  flac: "Flattened Accent Forms",
  frac: "Fractions",
  fwid: "Full Widths",
  half: "Half Forms",
  haln: "Halant Forms",
  halt: "Alternate Half Widths",
  hist: "Historical Forms",
  hkna: "Horizontal Kana Alternates",
  hlig: "Historical Ligatures",
  hngl: "Hangul",
  hojo: "Hojo Kanji Forms",
  hwid: "Half Widths",
  init: "Initial Forms",
  isol: "Isolated Forms",
  ital: "Italics",
  jalt: "Justification Alternates",
  jp04: "JIS2004 Forms",
  jp78: "JIS78 Forms",
  jp83: "JIS83 Forms",
  jp90: "JIS90 Forms",
  kern: "Kerning",
  lfbd: "Left Bounds",
  liga: "Standard Ligatures",
  ljmo: "Leading Jamo Forms",
  lnum: "Lining Figures",
  locl: "Localized Forms",
  ltra: "Left-to-right Alternates",
  ltrm: "Left-to-right Mirrored Forms",
  mark: "Mark Positioning",
  med2: "Medial Forms #2",
  medi: "Medial Forms",
  mgrk: "Mathematical Greek",
  mkmk: "Mark to Mark Positioning",
  mset: "Mark Positioning via Substitution",
  nalt: "Alternate Annotation Forms",
  nlck: "NLC Kanji Forms",
  nukt: "Nukta Forms",
  numr: "Numerators",
  onum: "Oldstyle Figures",
  opbd: "Optical Bounds",
  ordn: "Ordinals",
  ornm: "Ornaments",
  palt: "Proportional Alternate Widths",
  pcap: "Petite Capitals",
  pkna: "Proportional Kana",
  pnum: "Proportional Figures",
  pref: "Pre-base Forms",
  pres: "Pre-base Substitutions",
  pstf: "Post-base Forms",
  psts: "Post-base Substitutions",
  pwid: "Proportional Widths",
  qwid: "Quarter Widths",
  rand: "Randomize",
  rclt: "Required Contextual Alternates",
  rkrf: "Rakar Forms",
  rlig: "Required Ligatures",
  rphf: "Reph Form",
  rtbd: "Right Bounds",
  rtla: "Right-to-left Alternates",
  rtlm: "Right-to-left Mirrored Forms",
  ruby: "Ruby Notation Forms",
  rvrn: "Required Variation Alternates",
  salt: "Stylistic Alternates",
  sinf: "Scientific Inferiors",
  size: "Optical Size",
  smcp: "Small Capitals",
  smpl: "Simplified Forms",
  ss01: __ss00_name(1),
  ss02: __ss00_name(2),
  ss03: __ss00_name(3),
  ss04: __ss00_name(4),
  ss05: __ss00_name(5),
  ss06: __ss00_name(6),
  ss07: __ss00_name(7),
  ss08: __ss00_name(8),
  ss09: __ss00_name(9),
  ss10: __ss00_name(10),
  ss11: __ss00_name(11),
  ss12: __ss00_name(12),
  ss13: __ss00_name(13),
  ss14: __ss00_name(14),
  ss15: __ss00_name(15),
  ss16: __ss00_name(16),
  ss17: __ss00_name(17),
  ss18: __ss00_name(18),
  ss19: __ss00_name(19),
  ss20: __ss00_name(20),
  ssty: "Math Script-style Alternates",
  stch: "Stretching Glyph Decomposition",
  subs: "Subscript",
  sups: "Superscript",
  swsh: "Swash",
  titl: "Titling",
  tjmo: "Trailing Jamo Forms",
  tnam: "Traditional Name Forms",
  tnum: "Tabular Figures",
  trad: "Traditional Forms",
  twid: "Third Widths",
  unic: "Unicase",
  valt: "Alternate Vertical Metrics",
  vapk: "Kerning for Alternate Proportional Vertical Metrics",
  vatu: "Vattu Variants",
  vchw: "Vertical Contextual Half-width Spacing",
  vert: "Vertical Alternates",
  vhal: "Alternate Vertical Half Metrics",
  vjmo: "Vowel Jamo Forms",
  vkna: "Vertical Kana Alternates",
  vkrn: "Vertical Kerning",
  vpal: "Proportional Alternate Vertical Metrics",
  vrt2: "Vertical Alternates and Rotation",
  vrtr: "Vertical Alternates for Rotation",
  zero: "Slashed Zero",
} as const;

export type OpentypeFeatureTag = keyof typeof FEATURES;
